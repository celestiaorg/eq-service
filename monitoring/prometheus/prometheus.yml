global:
  # Interval for scraping metrics
  scrape_interval: 15s
  # Interval for evaluating rules
  evaluation_interval: 15s
  # Labels added to every metric/alert generated by this instance
  external_labels:
    monitor: "eq-service-monitor"
    environment: "development"

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'
rule_files:
  - "alert_rules.yml"

# Scrape configuration
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config
  - job_name: "prometheus"
    scrape_interval: 5s
    static_configs:
      - targets: ["localhost:9090"]

  # EQ Service - the main application we want to monitor
  - job_name: "eq-service"
    scrape_interval: 5s
    static_configs:
      - targets: ["host.docker.internal:9091"]
    metrics_path: "/metrics"
    relabel_configs:
      - target_label: instance
        replacement: "eq-service"

  # Node Exporter - system metrics
  - job_name: "node-exporter"
    static_configs:
      - targets: ["node-exporter:9100"]

  # cAdvisor - container metrics
  - job_name: "cadvisor"
    static_configs:
      - targets: ["cadvisor:8080"]

  # Alertmanager
  - job_name: "alertmanager"
    static_configs:
      - targets: ["alertmanager:9093"]

  # Blackbox exporter for probing external endpoints
  - job_name: "blackbox"
    metrics_path: /probe
    params:
      module: [http_2xx] # Look for a HTTP 200 response
    static_configs:
      - targets:
          - http://host.docker.internal:26658 # Local celestia node
          - https://api.succinct.xyz # ZK prover network check
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115 # The blackbox exporter's real hostname:port

  # Grafana self-monitoring
  - job_name: "grafana"
    static_configs:
      - targets: ["grafana:3000"]
