services:
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - "./prometheus:/etc/prometheus"
      - "prometheus_data:/prometheus"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=${PROMETHEUS_RETENTION:-200h}"
      - "--web.enable-lifecycle"
      - "--web.external-url=http://localhost:${PROMETHEUS_PORT:-9090}"
    restart: unless-stopped
    networks:
      - monitoring
    env_file:
      - ../.env

  alertmanager:
    container_name: alertmanager
    image: prom/alertmanager:latest
    ports:
      - "${ALERTMANAGER_PORT:-9093}:9093"
    volumes:
      - "./alertmanager:/etc/alertmanager"
      - "alertmanager_data:/alertmanager"
    command:
      - "--config.file=/etc/alertmanager/alertmanager.yml"
      - "--storage.path=/alertmanager"
      - "--web.external-url=http://localhost:${ALERTMANAGER_PORT:-9093}"
    restart: unless-stopped
    networks:
      - monitoring
    env_file:
      - ../.env

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    volumes:
      - "./grafana:/etc/grafana/provisioning"
      - "grafana_data:/var/lib/grafana"
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=${GF_USERS_ALLOW_SIGN_UP:-false}
      - GF_INSTALL_PLUGINS=${GF_INSTALL_PLUGINS:-grafana-clock-panel,grafana-simple-json-datasource}
    restart: unless-stopped
    networks:
      - monitoring
    env_file:
      - ../.env

  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter:latest
    ports:
      - "${NODE_EXPORTER_PORT:-9100}:9100"
    volumes:
      - "/proc:/host/proc:ro"
      - "/sys:/host/sys:ro"
      - "/:/rootfs:ro"
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
      - "--web.listen-address=0.0.0.0:9100"
    restart: unless-stopped
    networks:
      - monitoring
    env_file:
      - ../.env

  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor:latest
    ports:
      - "${CADVISOR_PORT:-8080}:8080"
    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:ro"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"
      - "/dev/disk/:/dev/disk:ro"
    command:
      - "--port=8080"
    privileged: true
    restart: unless-stopped
    networks:
      - monitoring
    env_file:
      - ../.env

  blackbox-exporter:
    container_name: blackbox-exporter
    image: prom/blackbox-exporter:latest
    ports:
      - "${BLACKBOX_EXPORTER_PORT:-9115}:9115"
    volumes:
      - "./blackbox:/etc/blackbox_exporter"
    command:
      - "--config.file=/etc/blackbox_exporter/blackbox.yml"
      - "--web.listen-address=0.0.0.0:9115"
    restart: unless-stopped
    networks:
      - monitoring
    env_file:
      - ../.env

  receiver:
    container_name: receiver
    build: ./receiver
    ports:
      - "${RECEIVER_PORT:-2021}:2021"
    environment:
      - PORT=2021
      - DEBUG=${RECEIVER_DEBUG:-false}
    restart: unless-stopped
    networks:
      - monitoring
    env_file:
      - ../.env

volumes:
  prometheus_data:
  grafana_data:
  alertmanager_data:

networks:
  monitoring:
    driver: bridge
